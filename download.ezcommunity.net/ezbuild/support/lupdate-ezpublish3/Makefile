#############################################################################
# Makefile for building: ../../bin/linux/ezlupdate
# Generated by qmake (1.07a) (Qt 3.3.3) on: Thu Jun 16 01:47:32 2005
# Project:  ezlupdate.pro
# Template: app
# Command: $(QMAKE) -o Makefile ezlupdate.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -m32 -march=i386 -mtune=pentium4 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -m32 -march=i386 -mtune=pentium4 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt-3.3/mkspecs/default -I. -I. -I$(QTDIR)/include -Imoc/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = obj/

####### Files

HEADERS = metatranslator.h \
		proparser.h
SOURCES = fetchtr_php.cpp \
		fetchtr_tpl.cpp \
		main.cpp \
		merge.cpp \
		numberh.cpp \
		sametexth.cpp \
		metatranslator.cpp \
		proparser.cpp
OBJECTS = obj/fetchtr_php.o \
		obj/fetchtr_tpl.o \
		obj/main.o \
		obj/merge.o \
		obj/numberh.o \
		obj/sametexth.o \
		obj/metatranslator.o \
		obj/proparser.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ezlupdate.pro
QMAKE_TARGET = ezlupdate
DESTDIR  = ../../bin/linux/
TARGET   = ../../bin/linux/ezlupdate

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d ../../bin/linux/ || mkdir -p ../../bin/linux/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: ezlupdate.pro  /usr/lib/qt-3.3/mkspecs/default/qmake.conf /usr/lib/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile ezlupdate.pro
qmake: 
	@$(QMAKE) -o Makefile ezlupdate.pro

dist: 
	@mkdir -p obj/ezlupdate && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) obj/ezlupdate/ && ( cd `dirname obj/ezlupdate` && $(TAR) ezlupdate.tar ezlupdate && $(GZIP) ezlupdate.tar ) && $(MOVE) `dirname obj/ezlupdate`/ezlupdate.tar.gz . && $(DEL_FILE) -r obj/ezlupdate

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../bin/linux/$(TARGET) $(TARGET)


FORCE:

####### Compile

obj/fetchtr_php.o: fetchtr_php.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/fetchtr_php.o fetchtr_php.cpp

obj/fetchtr_tpl.o: fetchtr_tpl.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/fetchtr_tpl.o fetchtr_tpl.cpp

obj/main.o: main.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/merge.o: merge.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/merge.o merge.cpp

obj/numberh.o: numberh.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/numberh.o numberh.cpp

obj/sametexth.o: sametexth.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/sametexth.o sametexth.cpp

obj/metatranslator.o: metatranslator.cpp metatranslator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/metatranslator.o metatranslator.cpp

obj/proparser.o: proparser.cpp proparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/proparser.o proparser.cpp

####### Install

install:  

uninstall:  

